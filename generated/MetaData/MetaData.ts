// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MultiHash extends ethereum.Event {
  get params(): MultiHash__Params {
    return new MultiHash__Params(this);
  }
}

export class MultiHash__Params {
  _event: MultiHash;

  constructor(event: MultiHash) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get multiHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class MetaData extends ethereum.SmartContract {
  static bind(address: Address): MetaData {
    return new MetaData("MetaData", address);
  }
}

export class PublishCall extends ethereum.Call {
  get inputs(): PublishCall__Inputs {
    return new PublishCall__Inputs(this);
  }

  get outputs(): PublishCall__Outputs {
    return new PublishCall__Outputs(this);
  }
}

export class PublishCall__Inputs {
  _call: PublishCall;

  constructor(call: PublishCall) {
    this._call = call;
  }

  get multiHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PublishCall__Outputs {
  _call: PublishCall;

  constructor(call: PublishCall) {
    this._call = call;
  }
}
